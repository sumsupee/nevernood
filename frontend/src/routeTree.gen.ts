/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ExampleChatRouteImport } from './routes/example.chat'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoStoreRouteImport } from './routes/demo.store'
import { Route as DemoMcpTodosRouteImport } from './routes/demo.mcp-todos'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { ServerRoute as McpServerRouteImport } from './routes/mcp'
import { ServerRoute as ApiSseServerRouteImport } from './routes/api.sse'
import { ServerRoute as ApiMessagesServerRouteImport } from './routes/api.messages'
import { ServerRoute as ApiMcpTodosServerRouteImport } from './routes/api.mcp-todos'
import { ServerRoute as ApiDemoTqTodosServerRouteImport } from './routes/api.demo-tq-todos'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'
import { ServerRoute as ApiDemoChatServerRouteImport } from './routes/api.demo-chat'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleChatRoute = ExampleChatRouteImport.update({
  id: '/example/chat',
  path: '/example/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStoreRoute = DemoStoreRouteImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoMcpTodosRoute = DemoMcpTodosRouteImport.update({
  id: '/demo/mcp-todos',
  path: '/demo/mcp-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const McpServerRoute = McpServerRouteImport.update({
  id: '/mcp',
  path: '/mcp',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiSseServerRoute = ApiSseServerRouteImport.update({
  id: '/api/sse',
  path: '/api/sse',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiMessagesServerRoute = ApiMessagesServerRouteImport.update({
  id: '/api/messages',
  path: '/api/messages',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiMcpTodosServerRoute = ApiMcpTodosServerRouteImport.update({
  id: '/api/mcp-todos',
  path: '/api/mcp-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoTqTodosServerRoute = ApiDemoTqTodosServerRouteImport.update({
  id: '/api/demo-tq-todos',
  path: '/api/demo-tq-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoChatServerRoute = ApiDemoChatServerRouteImport.update({
  id: '/api/demo-chat',
  path: '/api/demo-chat',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/example/chat': typeof ExampleChatRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/example/chat': typeof ExampleChatRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/example/chat': typeof ExampleChatRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo/mcp-todos'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/example/chat'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/mcp-todos'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/example/chat'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/demo/mcp-todos'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/example/chat'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoMcpTodosRoute: typeof DemoMcpTodosRoute
  DemoStoreRoute: typeof DemoStoreRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ExampleChatRoute: typeof ExampleChatRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/mcp': typeof McpServerRoute
  '/api/demo-chat': typeof ApiDemoChatServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
  '/api/messages': typeof ApiMessagesServerRoute
  '/api/sse': typeof ApiSseServerRoute
}
export interface FileServerRoutesByTo {
  '/mcp': typeof McpServerRoute
  '/api/demo-chat': typeof ApiDemoChatServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
  '/api/messages': typeof ApiMessagesServerRoute
  '/api/sse': typeof ApiSseServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/mcp': typeof McpServerRoute
  '/api/demo-chat': typeof ApiDemoChatServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
  '/api/messages': typeof ApiMessagesServerRoute
  '/api/sse': typeof ApiSseServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/mcp'
    | '/api/demo-chat'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/messages'
    | '/api/sse'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/mcp'
    | '/api/demo-chat'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/messages'
    | '/api/sse'
  id:
    | '__root__'
    | '/mcp'
    | '/api/demo-chat'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/messages'
    | '/api/sse'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  McpServerRoute: typeof McpServerRoute
  ApiDemoChatServerRoute: typeof ApiDemoChatServerRoute
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
  ApiDemoTqTodosServerRoute: typeof ApiDemoTqTodosServerRoute
  ApiMcpTodosServerRoute: typeof ApiMcpTodosServerRoute
  ApiMessagesServerRoute: typeof ApiMessagesServerRoute
  ApiSseServerRoute: typeof ApiSseServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/chat': {
      id: '/example/chat'
      path: '/example/chat'
      fullPath: '/example/chat'
      preLoaderRoute: typeof ExampleChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/mcp-todos': {
      id: '/demo/mcp-todos'
      path: '/demo/mcp-todos'
      fullPath: '/demo/mcp-todos'
      preLoaderRoute: typeof DemoMcpTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/mcp': {
      id: '/mcp'
      path: '/mcp'
      fullPath: '/mcp'
      preLoaderRoute: typeof McpServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/sse': {
      id: '/api/sse'
      path: '/api/sse'
      fullPath: '/api/sse'
      preLoaderRoute: typeof ApiSseServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/messages': {
      id: '/api/messages'
      path: '/api/messages'
      fullPath: '/api/messages'
      preLoaderRoute: typeof ApiMessagesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/mcp-todos': {
      id: '/api/mcp-todos'
      path: '/api/mcp-todos'
      fullPath: '/api/mcp-todos'
      preLoaderRoute: typeof ApiMcpTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-tq-todos': {
      id: '/api/demo-tq-todos'
      path: '/api/demo-tq-todos'
      fullPath: '/api/demo-tq-todos'
      preLoaderRoute: typeof ApiDemoTqTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-chat': {
      id: '/api/demo-chat'
      path: '/api/demo-chat'
      fullPath: '/api/demo-chat'
      preLoaderRoute: typeof ApiDemoChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoMcpTodosRoute: DemoMcpTodosRoute,
  DemoStoreRoute: DemoStoreRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ExampleChatRoute: ExampleChatRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  McpServerRoute: McpServerRoute,
  ApiDemoChatServerRoute: ApiDemoChatServerRoute,
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
  ApiDemoTqTodosServerRoute: ApiDemoTqTodosServerRoute,
  ApiMcpTodosServerRoute: ApiMcpTodosServerRoute,
  ApiMessagesServerRoute: ApiMessagesServerRoute,
  ApiSseServerRoute: ApiSseServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
